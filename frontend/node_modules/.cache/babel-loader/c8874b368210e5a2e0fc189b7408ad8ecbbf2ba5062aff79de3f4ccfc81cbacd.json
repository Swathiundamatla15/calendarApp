{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Subha\\\\Desktop\\\\recCal\\\\calendar-app\\\\frontend\\\\src\\\\components\\\\User\\\\CompanyGrid.jsx\",\n  _s = $RefreshSig$();\n// filepath: /C:/Users/Subha/Desktop/recCal/calendar-app/frontend/src/components/User/CompanyGrid.jsx\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { fetchCompanies } from '../../utils/api';\nimport CompanyCard from './CompanyCard'; // Ensure this file exists\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyGrid = () => {\n  _s();\n  const [companies, setCompanies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getCompanies = async () => {\n      try {\n        const data = await fetchCompanies();\n        setCompanies(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getCompanies();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n    children: companies.map(company => /*#__PURE__*/_jsxDEV(CompanyCard, {\n      company: company\n    }, company._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(CompanyGrid, \"yiHW6JhPhXEO1IWZQ8B6P5YKOfQ=\");\n_c = CompanyGrid;\nexport default CompanyGrid;\nvar _c;\n$RefreshReg$(_c, \"CompanyGrid\");","map":{"version":3,"names":["React","useEffect","useState","fetchCompanies","CompanyCard","jsxDEV","_jsxDEV","CompanyGrid","_s","companies","setCompanies","loading","setLoading","error","setError","getCompanies","data","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","company","_id","_c","$RefreshReg$"],"sources":["C:/Users/Subha/Desktop/recCal/calendar-app/frontend/src/components/User/CompanyGrid.jsx"],"sourcesContent":["// filepath: /C:/Users/Subha/Desktop/recCal/calendar-app/frontend/src/components/User/CompanyGrid.jsx\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { fetchCompanies } from '../../utils/api';\nimport CompanyCard from './CompanyCard'; // Ensure this file exists\n\nconst CompanyGrid = () => {\n    const [companies, setCompanies] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const getCompanies = async () => {\n            try {\n                const data = await fetchCompanies();\n                setCompanies(data);\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        getCompanies();\n    }, []);\n\n    if (loading) return <div>Loading...</div>;\n    if (error) return <div>Error: {error}</div>;\n\n    return (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {companies.map(company => (\n                <CompanyCard key={company._id} company={company} />\n            ))}\n        </div>\n    );\n};\n\nexport default CompanyGrid;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,iBAAiB;AAChD,OAAOC,WAAW,MAAM,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMc,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMb,cAAc,CAAC,CAAC;QACnCO,YAAY,CAACM,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVH,QAAQ,CAACG,GAAG,CAACC,OAAO,CAAC;MACzB,CAAC,SAAS;QACNN,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAAa,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIV,KAAK,EAAE,oBAAOP,OAAA;IAAAa,QAAA,GAAK,SAAO,EAACN,KAAK;EAAA;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE3C,oBACIjB,OAAA;IAAKkB,SAAS,EAAC,sDAAsD;IAAAL,QAAA,EAChEV,SAAS,CAACgB,GAAG,CAACC,OAAO,iBAClBpB,OAAA,CAACF,WAAW;MAAmBsB,OAAO,EAAEA;IAAQ,GAA9BA,OAAO,CAACC,GAAG;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CACrD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACf,EAAA,CA9BID,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AAgCjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}