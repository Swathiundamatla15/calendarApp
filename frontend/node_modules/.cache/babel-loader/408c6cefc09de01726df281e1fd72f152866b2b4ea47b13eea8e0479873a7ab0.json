{"ast":null,"code":"const API_URL = 'http://localhost:5000/api'; // Update with your backend URL\n\nexport const fetchCommunications = async () => {\n  try {\n    const response = await fetch(`${API_URL}/communications`);\n    if (!response.ok) {\n      const errorMessage = `Failed to fetch communications: ${response.status} ${response.statusText}`;\n      console.error(errorMessage);\n      throw new Error(errorMessage);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Network error:', error);\n    throw new Error('Failed to fetch communications due to network error');\n  }\n};","map":{"version":3,"names":["API_URL","fetchCommunications","response","fetch","ok","errorMessage","status","statusText","console","error","Error","json"],"sources":["C:/Users/Subha/Desktop/recCal/calendar-app/frontend/src/utils/api.js"],"sourcesContent":["const API_URL = 'http://localhost:5000/api'; // Update with your backend URL\n\nexport const fetchCommunications = async () => {\n    try {\n        const response = await fetch(`${API_URL}/communications`);\n        if (!response.ok) {\n            const errorMessage = `Failed to fetch communications: ${response.status} ${response.statusText}`;\n            console.error(errorMessage);\n            throw new Error(errorMessage);\n        }\n        return await response.json();\n    } catch (error) {\n        console.error('Network error:', error);\n        throw new Error('Failed to fetch communications due to network error');\n    }\n};"],"mappings":"AAAA,MAAMA,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAE7C,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,iBAAiB,CAAC;IACzD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MACd,MAAMC,YAAY,GAAG,mCAAmCH,QAAQ,CAACI,MAAM,IAAIJ,QAAQ,CAACK,UAAU,EAAE;MAChGC,OAAO,CAACC,KAAK,CAACJ,YAAY,CAAC;MAC3B,MAAM,IAAIK,KAAK,CAACL,YAAY,CAAC;IACjC;IACA,OAAO,MAAMH,QAAQ,CAACS,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOF,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACtC,MAAM,IAAIC,KAAK,CAAC,qDAAqD,CAAC;EAC1E;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}