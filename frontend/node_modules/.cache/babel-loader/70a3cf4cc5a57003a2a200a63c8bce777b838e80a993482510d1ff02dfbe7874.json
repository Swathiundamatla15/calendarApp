{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Subha\\\\Desktop\\\\recCal\\\\calendar-app\\\\frontend\\\\src\\\\components\\\\User\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchCompanies } from '../../utils/api';\nimport CompanyGrid from './CompanyGrid';\nimport CommunicationModal from './CommunicationModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [companies, setCompanies] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // Fetch all companies\n  useEffect(() => {\n    const getCompanies = async () => {\n      const data = await fetchCompanies();\n      setCompanies(data);\n      if (data.length > 0) setSelectedCompany(data[0]); // Set the first company as default\n    };\n    getCompanies();\n  }, []);\n\n  // Open the modal for logging communication\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  // Close the modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  // Update the selected company when a company is clicked\n  const handleCompanyClick = companyId => {\n    const company = companies.find(c => c._id === companyId);\n    setSelectedCompany(company);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard container mx-auto p-6 bg-spotify-black min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-8 text-center text-gray-200\",\n      children: \"User Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"company-details bg-white p-6 rounded-lg shadow-lg mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-semibold mb-6 text-gray-700\",\n        children: \"Company Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), selectedCompany ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4 text-lg text-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Company:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), \" \", selectedCompany.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4 text-lg text-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), \" \", selectedCompany.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4 text-lg text-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), \" \", selectedCompany.phoneNumbers.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4 text-lg text-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), \" \", selectedCompany.emails.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4 text-lg text-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"LinkedIn Profile:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), ' ', selectedCompany.linkedinProfile]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-600 text-white px-6 py-2 rounded-lg mt-4 hover:bg-blue-700 transition duration-300\",\n          onClick: handleOpenModal,\n          children: \"Log Communication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-600\",\n        children: \"No company selected.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompanyGrid, {\n      companies: companies,\n      onClickCompany: handleCompanyClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(CommunicationModal, {\n      isOpen: isModalOpen,\n      onRequestClose: handleCloseModal,\n      company: selectedCompany\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Zta89I5T9SpxKHafzHAL/gT6PME=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","fetchCompanies","CompanyGrid","CommunicationModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","companies","setCompanies","selectedCompany","setSelectedCompany","isModalOpen","setIsModalOpen","getCompanies","data","length","handleOpenModal","handleCloseModal","handleCompanyClick","companyId","company","find","c","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","location","phoneNumbers","join","emails","linkedinProfile","onClick","onClickCompany","isOpen","onRequestClose","_c","$RefreshReg$"],"sources":["C:/Users/Subha/Desktop/recCal/calendar-app/frontend/src/components/User/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchCompanies } from '../../utils/api';\nimport CompanyGrid from './CompanyGrid';\nimport CommunicationModal from './CommunicationModal';\n\nconst Dashboard = () => {\n  const [companies, setCompanies] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // Fetch all companies\n  useEffect(() => {\n    const getCompanies = async () => {\n      const data = await fetchCompanies();\n      setCompanies(data);\n      if (data.length > 0) setSelectedCompany(data[0]); // Set the first company as default\n    };\n    getCompanies();\n  }, []);\n\n  // Open the modal for logging communication\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  // Close the modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  // Update the selected company when a company is clicked\n  const handleCompanyClick = (companyId) => {\n    const company = companies.find((c) => c._id === companyId);\n    setSelectedCompany(company);\n  };\n\n  return (\n    <div className=\"dashboard container mx-auto p-6 bg-spotify-black min-h-screen\">\n      <h1 className=\"text-4xl font-bold mb-8 text-center text-gray-200\">\n        User Dashboard\n      </h1>\n\n      {/* Main Company Details */}\n      <div className=\"company-details bg-white p-6 rounded-lg shadow-lg mb-8\">\n        <h2 className=\"text-3xl font-semibold mb-6 text-gray-700\">\n          Company Details\n        </h2>\n        {selectedCompany ? (\n          <>\n            <p className=\"mb-4 text-lg text-gray-600\">\n              <strong>Company:</strong> {selectedCompany.name}\n            </p>\n            <p className=\"mb-4 text-lg text-gray-600\">\n              <strong>City:</strong> {selectedCompany.location}\n            </p>\n            <p className=\"mb-4 text-lg text-gray-600\">\n              <strong>Phone:</strong> {selectedCompany.phoneNumbers.join(', ')}\n            </p>\n            <p className=\"mb-4 text-lg text-gray-600\">\n              <strong>Email:</strong> {selectedCompany.emails.join(', ')}\n            </p>\n            <p className=\"mb-4 text-lg text-gray-600\">\n              <strong>LinkedIn Profile:</strong>{' '}\n              {selectedCompany.linkedinProfile}\n            </p>\n            <button\n              className=\"bg-blue-600 text-white px-6 py-2 rounded-lg mt-4 hover:bg-blue-700 transition duration-300\"\n              onClick={handleOpenModal}\n            >\n              Log Communication\n            </button>\n          </>\n        ) : (\n          <p className=\"text-lg text-gray-600\">No company selected.</p>\n        )}\n      </div>\n\n      {/* Company Grid */}\n      <CompanyGrid companies={companies} onClickCompany={handleCompanyClick} />\n\n      {/* Communication Modal */}\n      {isModalOpen && (\n        <CommunicationModal\n          isOpen={isModalOpen}\n          onRequestClose={handleCloseModal}\n          company={selectedCompany}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}