{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Subha\\\\Desktop\\\\recCal\\\\calendar-app\\\\frontend\\\\src\\\\components\\\\User\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport CompanyGrid from './CompanyGrid';\nimport CommunicationModal from './CommunicationModal';\nimport { fetchCompanies } from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [companies, setCompanies] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedCompanyId, setSelectedCompanyId] = useState(null);\n  useEffect(() => {\n    const getCompanies = async () => {\n      const data = await fetchCompanies();\n      setCompanies(data);\n    };\n    getCompanies();\n  }, []);\n  const handleOpenModal = companyId => {\n    setSelectedCompanyId(companyId);\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedCompanyId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"User Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-500 text-white px-4 py-2 rounded mb-4\",\n      onClick: () => handleOpenModal(null),\n      children: \"Log Communication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompanyGrid, {\n      companies: companies,\n      onOpenModal: handleOpenModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(CommunicationModal, {\n      isOpen: isModalOpen,\n      onRequestClose: handleCloseModal,\n      companyId: selectedCompanyId,\n      existingCommunications: []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"6lMrop3SmCeBKxZsBOCcwVA6Qks=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","CompanyGrid","CommunicationModal","fetchCompanies","jsxDEV","_jsxDEV","Dashboard","_s","companies","setCompanies","isModalOpen","setIsModalOpen","selectedCompanyId","setSelectedCompanyId","getCompanies","data","handleOpenModal","companyId","handleCloseModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onOpenModal","isOpen","onRequestClose","existingCommunications","_c","$RefreshReg$"],"sources":["C:/Users/Subha/Desktop/recCal/calendar-app/frontend/src/components/User/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CompanyGrid from './CompanyGrid';\nimport CommunicationModal from './CommunicationModal';\nimport { fetchCompanies } from '../../utils/api';\n\nconst Dashboard = () => {\n  const [companies, setCompanies] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedCompanyId, setSelectedCompanyId] = useState(null);\n\n  useEffect(() => {\n    const getCompanies = async () => {\n      const data = await fetchCompanies();\n      setCompanies(data);\n    };\n    getCompanies();\n  }, []);\n\n  const handleOpenModal = (companyId) => {\n    setSelectedCompanyId(companyId);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedCompanyId(null);\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <h1 className=\"text-2xl font-bold mb-4\">User Dashboard</h1>\n      <button\n        className=\"bg-blue-500 text-white px-4 py-2 rounded mb-4\"\n        onClick={() => handleOpenModal(null)}\n      >\n        Log Communication\n      </button>\n      <CompanyGrid companies={companies} onOpenModal={handleOpenModal} />\n      {isModalOpen && (\n        <CommunicationModal\n          isOpen={isModalOpen}\n          onRequestClose={handleCloseModal}\n          companyId={selectedCompanyId}\n          existingCommunications={[]}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,SAASC,cAAc,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACY,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEhED,SAAS,CAAC,MAAM;IACd,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,IAAI,GAAG,MAAMZ,cAAc,CAAC,CAAC;MACnCM,YAAY,CAACM,IAAI,CAAC;IACpB,CAAC;IACDD,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,eAAe,GAAIC,SAAS,IAAK;IACrCJ,oBAAoB,CAACI,SAAS,CAAC;IAC/BN,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;IAC7BP,cAAc,CAAC,KAAK,CAAC;IACrBE,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,oBACER,OAAA;IAAKc,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBf,OAAA;MAAIc,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3DnB,OAAA;MACEc,SAAS,EAAC,+CAA+C;MACzDM,OAAO,EAAEA,CAAA,KAAMT,eAAe,CAAC,IAAI,CAAE;MAAAI,QAAA,EACtC;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTnB,OAAA,CAACJ,WAAW;MAACO,SAAS,EAAEA,SAAU;MAACkB,WAAW,EAAEV;IAAgB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAClEd,WAAW,iBACVL,OAAA,CAACH,kBAAkB;MACjByB,MAAM,EAAEjB,WAAY;MACpBkB,cAAc,EAAEV,gBAAiB;MACjCD,SAAS,EAAEL,iBAAkB;MAC7BiB,sBAAsB,EAAE;IAAG;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CA3CID,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AA6Cf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}