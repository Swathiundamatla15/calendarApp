{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Subha\\\\Desktop\\\\recCal\\\\calendar-app\\\\frontend\\\\src\\\\components\\\\User\\\\CalendarView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { fetchCommunications } from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarView = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    const loadEvents = async () => {\n      const data = await fetchCommunications();\n      const formattedEvents = data.map(event => ({\n        title: event.type,\n        date: event.date,\n        description: event.notes\n      }));\n      setEvents(formattedEvents);\n    };\n    loadEvents();\n  }, []);\n  const handleEventClick = info => {\n    alert(`Event: ${info.event.title}\\nDate: ${info.event.start}\\nNotes: ${info.event.extendedProps.description}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-view\",\n    children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      eventClick: handleEventClick,\n      headerToolbar: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth,dayGridWeek,dayGridDay'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(CalendarView, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = CalendarView;\nexport default CalendarView;\nvar _c;\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","interactionPlugin","fetchCommunications","jsxDEV","_jsxDEV","CalendarView","_s","events","setEvents","loadEvents","data","formattedEvents","map","event","title","type","date","description","notes","handleEventClick","info","alert","start","extendedProps","className","children","plugins","initialView","eventClick","headerToolbar","left","center","right","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Subha/Desktop/recCal/calendar-app/frontend/src/components/User/CalendarView.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { fetchCommunications } from '../../utils/api';\n\nconst CalendarView = () => {\n    const [events, setEvents] = useState([]);\n\n    useEffect(() => {\n        const loadEvents = async () => {\n            const data = await fetchCommunications();\n            const formattedEvents = data.map(event => ({\n                title: event.type,\n                date: event.date,\n                description: event.notes,\n            }));\n            setEvents(formattedEvents);\n        };\n\n        loadEvents();\n    }, []);\n\n    const handleEventClick = (info) => {\n        alert(`Event: ${info.event.title}\\nDate: ${info.event.start}\\nNotes: ${info.event.extendedProps.description}`);\n    };\n\n    return (\n        <div className=\"calendar-view\">\n            <FullCalendar\n                plugins={[dayGridPlugin, interactionPlugin]}\n                initialView=\"dayGridMonth\"\n                events={events}\n                eventClick={handleEventClick}\n                headerToolbar={{\n                    left: 'prev,next today',\n                    center: 'title',\n                    right: 'dayGridMonth,dayGridWeek,dayGridDay',\n                }}\n            />\n        </div>\n    );\n};\n\nexport default CalendarView;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,SAASC,mBAAmB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,IAAI,GAAG,MAAMR,mBAAmB,CAAC,CAAC;MACxC,MAAMS,eAAe,GAAGD,IAAI,CAACE,GAAG,CAACC,KAAK,KAAK;QACvCC,KAAK,EAAED,KAAK,CAACE,IAAI;QACjBC,IAAI,EAAEH,KAAK,CAACG,IAAI;QAChBC,WAAW,EAAEJ,KAAK,CAACK;MACvB,CAAC,CAAC,CAAC;MACHV,SAAS,CAACG,eAAe,CAAC;IAC9B,CAAC;IAEDF,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,gBAAgB,GAAIC,IAAI,IAAK;IAC/BC,KAAK,CAAC,UAAUD,IAAI,CAACP,KAAK,CAACC,KAAK,WAAWM,IAAI,CAACP,KAAK,CAACS,KAAK,YAAYF,IAAI,CAACP,KAAK,CAACU,aAAa,CAACN,WAAW,EAAE,CAAC;EAClH,CAAC;EAED,oBACIb,OAAA;IAAKoB,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC1BrB,OAAA,CAACL,YAAY;MACT2B,OAAO,EAAE,CAAC1B,aAAa,EAAEC,iBAAiB,CAAE;MAC5C0B,WAAW,EAAC,cAAc;MAC1BpB,MAAM,EAAEA,MAAO;MACfqB,UAAU,EAAET,gBAAiB;MAC7BU,aAAa,EAAE;QACXC,IAAI,EAAE,iBAAiB;QACvBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE;MACX;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAC9B,EAAA,CApCID,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAsClB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}