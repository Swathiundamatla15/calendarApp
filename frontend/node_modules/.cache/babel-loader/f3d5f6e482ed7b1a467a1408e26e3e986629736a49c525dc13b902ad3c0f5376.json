{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Subha\\\\Desktop\\\\recCal\\\\calendar-app\\\\frontend\\\\src\\\\components\\\\User\\\\CalendarView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { fetchCommunications } from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarView = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    const loadEvents = async () => {\n      const data = await fetchCommunications();\n      const formattedEvents = data.map(event => ({\n        title: event.type,\n        date: event.date,\n        description: event.notes\n      }));\n      setEvents(formattedEvents);\n    };\n    loadEvents();\n  }, []);\n  const handleEventClick = info => {\n    alert(`Event: ${info.event.title}\\nDate: ${info.event.start}\\nNotes: ${info.event.extendedProps.description}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-view\",\n    children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      events: events,\n      eventClick: handleEventClick,\n      headerToolbar: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth,dayGridWeek,dayGridDay'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarView, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = CalendarView;\nexport default CalendarView;\nvar _c;\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","interactionPlugin","fetchCommunications","jsxDEV","_jsxDEV","CalendarView","_s","events","setEvents","loadEvents","data","formattedEvents","map","event","title","type","date","description","notes","handleEventClick","info","alert","start","extendedProps","className","children","plugins","initialView","eventClick","headerToolbar","left","center","right","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Subha/Desktop/recCal/calendar-app/frontend/src/components/User/CalendarView.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { fetchCommunications } from '../../utils/api';\n\nconst CalendarView = () => {\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    const loadEvents = async () => {\n      const data = await fetchCommunications();\n      const formattedEvents = data.map((event) => ({\n        title: event.type,\n        date: event.date,\n        description: event.notes,\n      }));\n      setEvents(formattedEvents);\n    };\n\n    loadEvents();\n  }, []);\n\n  const handleEventClick = (info) => {\n    alert(\n      `Event: ${info.event.title}\\nDate: ${info.event.start}\\nNotes: ${info.event.extendedProps.description}`\n    );\n  };\n\n  return (\n    <div className=\"calendar-view\">\n      <FullCalendar\n        plugins={[dayGridPlugin, interactionPlugin]}\n        initialView=\"dayGridMonth\"\n        events={events}\n        eventClick={handleEventClick}\n        headerToolbar={{\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,dayGridWeek,dayGridDay',\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CalendarView;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,SAASC,mBAAmB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,IAAI,GAAG,MAAMR,mBAAmB,CAAC,CAAC;MACxC,MAAMS,eAAe,GAAGD,IAAI,CAACE,GAAG,CAAEC,KAAK,KAAM;QAC3CC,KAAK,EAAED,KAAK,CAACE,IAAI;QACjBC,IAAI,EAAEH,KAAK,CAACG,IAAI;QAChBC,WAAW,EAAEJ,KAAK,CAACK;MACrB,CAAC,CAAC,CAAC;MACHV,SAAS,CAACG,eAAe,CAAC;IAC5B,CAAC;IAEDF,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,gBAAgB,GAAIC,IAAI,IAAK;IACjCC,KAAK,CACH,UAAUD,IAAI,CAACP,KAAK,CAACC,KAAK,WAAWM,IAAI,CAACP,KAAK,CAACS,KAAK,YAAYF,IAAI,CAACP,KAAK,CAACU,aAAa,CAACN,WAAW,EACvG,CAAC;EACH,CAAC;EAED,oBACEb,OAAA;IAAKoB,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BrB,OAAA,CAACL,YAAY;MACX2B,OAAO,EAAE,CAAC1B,aAAa,EAAEC,iBAAiB,CAAE;MAC5C0B,WAAW,EAAC,cAAc;MAC1BpB,MAAM,EAAEA,MAAO;MACfqB,UAAU,EAAET,gBAAiB;MAC7BU,aAAa,EAAE;QACbC,IAAI,EAAE,iBAAiB;QACvBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE;MACT;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAtCID,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}