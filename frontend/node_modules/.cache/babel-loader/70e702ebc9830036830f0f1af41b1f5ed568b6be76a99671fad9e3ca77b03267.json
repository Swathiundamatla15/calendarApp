{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Subha\\\\Desktop\\\\recCal\\\\calendar-app\\\\frontend\\\\src\\\\components\\\\Reporting\\\\EffectivenessReport.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport api from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EffectivenessReport = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await api.get('/communications/effectiveness');\n        setData(response.data);\n      } catch (error) {\n        console.error('Error fetching effectiveness data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const chartData = {\n    labels: data.map(item => item.method),\n    datasets: [{\n      label: 'Effectiveness',\n      data: data.map(item => item.successRate),\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  };\n  const options = {\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Success Rate (%)'\n        }\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"effectiveness-report\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Communication Effectiveness Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(EffectivenessReport, \"YP7e7Smzxlgf2d3MqLcgRZjo83U=\");\n_c = EffectivenessReport;\nexport default EffectivenessReport;\nvar _c;\n$RefreshReg$(_c, \"EffectivenessReport\");","map":{"version":3,"names":["React","useEffect","useState","Bar","api","jsxDEV","_jsxDEV","EffectivenessReport","_s","data","setData","loading","setLoading","fetchData","response","get","error","console","chartData","labels","map","item","method","datasets","label","successRate","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","title","display","text","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/Subha/Desktop/recCal/calendar-app/frontend/src/components/Reporting/EffectivenessReport.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport api from '../../utils/api';\n\nconst EffectivenessReport = () => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await api.get('/communications/effectiveness');\n                setData(response.data);\n            } catch (error) {\n                console.error('Error fetching effectiveness data:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    const chartData = {\n        labels: data.map(item => item.method),\n        datasets: [\n            {\n                label: 'Effectiveness',\n                data: data.map(item => item.successRate),\n                backgroundColor: 'rgba(75, 192, 192, 0.6)',\n                borderColor: 'rgba(75, 192, 192, 1)',\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    const options = {\n        scales: {\n            y: {\n                beginAtZero: true,\n                title: {\n                    display: true,\n                    text: 'Success Rate (%)',\n                },\n            },\n        },\n    };\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className=\"effectiveness-report\">\n            <h2>Communication Effectiveness Report</h2>\n            <Bar data={chartData} options={options} />\n        </div>\n    );\n};\n\nexport default EffectivenessReport;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAC,+BAA+B,CAAC;QAC/DL,OAAO,CAACI,QAAQ,CAACL,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOO,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC9D,CAAC,SAAS;QACNJ,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,SAAS,GAAG;IACdC,MAAM,EAAEV,IAAI,CAACW,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,CAAC;IACrCC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,eAAe;MACtBf,IAAI,EAAEA,IAAI,CAACW,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACI,WAAW,CAAC;MACxCC,eAAe,EAAE,yBAAyB;MAC1CC,WAAW,EAAE,uBAAuB;MACpCC,WAAW,EAAE;IACjB,CAAC;EAET,CAAC;EAED,MAAMC,OAAO,GAAG;IACZC,MAAM,EAAE;MACJC,CAAC,EAAE;QACCC,WAAW,EAAE,IAAI;QACjBC,KAAK,EAAE;UACHC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACV;MACJ;IACJ;EACJ,CAAC;EAED,IAAIxB,OAAO,EAAE;IACT,oBAAOL,OAAA;MAAA8B,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,oBACIlC,OAAA;IAAKmC,SAAS,EAAC,sBAAsB;IAAAL,QAAA,gBACjC9B,OAAA;MAAA8B,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3ClC,OAAA,CAACH,GAAG;MAACM,IAAI,EAAES,SAAU;MAACW,OAAO,EAAEA;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEd,CAAC;AAAChC,EAAA,CAtDID,mBAAmB;AAAAmC,EAAA,GAAnBnC,mBAAmB;AAwDzB,eAAeA,mBAAmB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}