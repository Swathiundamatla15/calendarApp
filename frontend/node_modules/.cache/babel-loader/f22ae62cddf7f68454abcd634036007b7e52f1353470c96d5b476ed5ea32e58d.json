{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Bar}from'react-chartjs-2';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const OverdueTrends=()=>{const[overdueData,setOverdueData]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{const fetchOverdueData=async()=>{try{const response=await axios.get('/api/communications/overdue');setOverdueData(response.data);}catch(error){console.error('Error fetching overdue data:',error);}finally{setLoading(false);}};fetchOverdueData();},[]);const chartData={labels:overdueData.map(item=>item.companyName),datasets:[{label:'Overdue Communications',data:overdueData.map(item=>item.overdueCount),backgroundColor:'rgba(255, 99, 132, 0.6)'}]};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-4\",children:\"Overdue Communication Trends\"}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}):/*#__PURE__*/_jsx(Bar,{data:chartData,options:{responsive:true}})]});};export default OverdueTrends;","map":{"version":3,"names":["React","useEffect","useState","Bar","axios","jsx","_jsx","jsxs","_jsxs","OverdueTrends","overdueData","setOverdueData","loading","setLoading","fetchOverdueData","response","get","data","error","console","chartData","labels","map","item","companyName","datasets","label","overdueCount","backgroundColor","className","children","options","responsive"],"sources":["C:/Users/Subha/Desktop/recCal/calendar-app/frontend/src/components/Reporting/OverdueTrends.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\n\nconst OverdueTrends = () => {\n  const [overdueData, setOverdueData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchOverdueData = async () => {\n      try {\n        const response = await axios.get('/api/communications/overdue');\n        setOverdueData(response.data);\n      } catch (error) {\n        console.error('Error fetching overdue data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchOverdueData();\n  }, []);\n\n  const chartData = {\n    labels: overdueData.map((item) => item.companyName),\n    datasets: [\n      {\n        label: 'Overdue Communications',\n        data: overdueData.map((item) => item.overdueCount),\n        backgroundColor: 'rgba(255, 99, 132, 0.6)',\n      },\n    ],\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h2 className=\"text-xl font-bold mb-4\">Overdue Communication Trends</h2>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <Bar data={chartData} options={{ responsive: true }} />\n      )}\n    </div>\n  );\n};\n\nexport default OverdueTrends;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,GAAG,KAAQ,iBAAiB,CACrC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACU,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAE5CD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAX,KAAK,CAACY,GAAG,CAAC,6BAA6B,CAAC,CAC/DL,cAAc,CAACI,QAAQ,CAACE,IAAI,CAAC,CAC/B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CAAC,OAAS,CACRL,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDC,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAM,SAAS,CAAG,CAChBC,MAAM,CAAEX,WAAW,CAACY,GAAG,CAAEC,IAAI,EAAKA,IAAI,CAACC,WAAW,CAAC,CACnDC,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,wBAAwB,CAC/BT,IAAI,CAAEP,WAAW,CAACY,GAAG,CAAEC,IAAI,EAAKA,IAAI,CAACI,YAAY,CAAC,CAClDC,eAAe,CAAE,yBACnB,CAAC,CAEL,CAAC,CAED,mBACEpB,KAAA,QAAKqB,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBxB,IAAA,OAAIuB,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CAAC,8BAA4B,CAAI,CAAC,CACvElB,OAAO,cACNN,IAAA,MAAAwB,QAAA,CAAG,YAAU,CAAG,CAAC,cAEjBxB,IAAA,CAACH,GAAG,EAACc,IAAI,CAAEG,SAAU,CAACW,OAAO,CAAE,CAAEC,UAAU,CAAE,IAAK,CAAE,CAAE,CACvD,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAvB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}