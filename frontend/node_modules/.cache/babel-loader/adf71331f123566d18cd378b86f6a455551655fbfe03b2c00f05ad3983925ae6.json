{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Subha\\\\Desktop\\\\recCal\\\\calendar-app\\\\frontend\\\\src\\\\components\\\\User\\\\CompanyGrid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchCompanies } from '../../utils/api';\nimport CompanyCard from './CompanyCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyGrid = ({\n  onOpenModal\n}) => {\n  _s();\n  const [companies, setCompanies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getCompanies = async () => {\n      try {\n        const data = await fetchCompanies();\n        setCompanies(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getCompanies();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n    children: companies.map(company => /*#__PURE__*/_jsxDEV(CompanyCard, {\n      company: company,\n      onOpenModal: onOpenModal\n    }, company._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyGrid, \"yiHW6JhPhXEO1IWZQ8B6P5YKOfQ=\");\n_c = CompanyGrid;\nCompanyGrid.propTypes = {\n  onOpenModal: PropTypes.func.isRequired\n};\nexport default CompanyGrid;\nvar _c;\n$RefreshReg$(_c, \"CompanyGrid\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","fetchCompanies","CompanyCard","jsxDEV","_jsxDEV","CompanyGrid","onOpenModal","_s","companies","setCompanies","loading","setLoading","error","setError","getCompanies","data","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","company","_id","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["C:/Users/Subha/Desktop/recCal/calendar-app/frontend/src/components/User/CompanyGrid.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchCompanies } from '../../utils/api';\nimport CompanyCard from './CompanyCard';\n\nconst CompanyGrid = ({ onOpenModal }) => {\n  const [companies, setCompanies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getCompanies = async () => {\n      try {\n        const data = await fetchCompanies();\n        setCompanies(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getCompanies();\n  }, []);\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      {companies.map((company) => (\n        <CompanyCard\n          key={company._id}\n          company={company}\n          onOpenModal={onOpenModal}\n        />\n      ))}\n    </div>\n  );\n};\n\nCompanyGrid.propTypes = {\n  onOpenModal: PropTypes.func.isRequired,\n};\n\nexport default CompanyGrid;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,cAAc,QAAQ,iBAAiB;AAChD,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMgB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMd,cAAc,CAAC,CAAC;QACnCQ,YAAY,CAACM,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZH,QAAQ,CAACG,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,SAAS;QACRN,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE,oBAAON,OAAA;IAAAc,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIV,KAAK,EAAE,oBAAOR,OAAA;IAAAc,QAAA,GAAK,SAAO,EAACN,KAAK;EAAA;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE3C,oBACElB,OAAA;IAAKmB,SAAS,EAAC,sDAAsD;IAAAL,QAAA,EAClEV,SAAS,CAACgB,GAAG,CAAEC,OAAO,iBACrBrB,OAAA,CAACF,WAAW;MAEVuB,OAAO,EAAEA,OAAQ;MACjBnB,WAAW,EAAEA;IAAY,GAFpBmB,OAAO,CAACC,GAAG;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGjB,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CAlCIF,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAoCjBA,WAAW,CAACuB,SAAS,GAAG;EACtBtB,WAAW,EAAEN,SAAS,CAAC6B,IAAI,CAACC;AAC9B,CAAC;AAED,eAAezB,WAAW;AAAC,IAAAsB,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}