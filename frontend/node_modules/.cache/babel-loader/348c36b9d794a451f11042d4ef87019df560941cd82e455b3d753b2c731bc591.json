{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Subha\\\\Desktop\\\\recCal\\\\calendar-app\\\\frontend\\\\src\\\\components\\\\User\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchCompanies } from '../../utils/api';\nimport CompanyGrid from './CompanyGrid';\nimport CommunicationModal from './CommunicationModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  var _companyDetails$phone, _companyDetails$email;\n  const [companies, setCompanies] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedCompanyId, setSelectedCompanyId] = useState(null);\n  const [companyDetails, setCompanyDetails] = useState({});\n  useEffect(() => {\n    const getCompanies = async () => {\n      const data = await fetchCompanies();\n      setCompanies(data);\n    };\n    getCompanies();\n  }, []);\n  const handleOpenModal = companyId => {\n    setSelectedCompanyId(companyId);\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedCompanyId(null);\n  };\n  const handleCompanyDetails = companyId => {\n    const company = companies.find(c => c._id === companyId);\n    setCompanyDetails(company); // Set the selected company details (name, city, phone, email, etc.)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"User Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"company-details mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Company:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), \" \", companyDetails === null || companyDetails === void 0 ? void 0 : companyDetails.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"City:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), \" \", companyDetails === null || companyDetails === void 0 ? void 0 : companyDetails.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Phone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), \" \", companyDetails === null || companyDetails === void 0 ? void 0 : (_companyDetails$phone = companyDetails.phoneNumbers) === null || _companyDetails$phone === void 0 ? void 0 : _companyDetails$phone.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), \" \", companyDetails === null || companyDetails === void 0 ? void 0 : (_companyDetails$email = companyDetails.emails) === null || _companyDetails$email === void 0 ? void 0 : _companyDetails$email.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompanyGrid, {\n      companies: companies,\n      onOpenModal: handleOpenModal,\n      onClickCompany: handleCompanyDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(CommunicationModal, {\n      isOpen: isModalOpen,\n      onRequestClose: handleCloseModal,\n      companyId: selectedCompanyId,\n      existingCommunications: []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"gkko5pnoK6SK5R4lEAg5juKAvAE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","fetchCompanies","CompanyGrid","CommunicationModal","jsxDEV","_jsxDEV","Dashboard","_s","_companyDetails$phone","_companyDetails$email","companies","setCompanies","isModalOpen","setIsModalOpen","selectedCompanyId","setSelectedCompanyId","companyDetails","setCompanyDetails","getCompanies","data","handleOpenModal","companyId","handleCloseModal","handleCompanyDetails","company","find","c","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","location","phoneNumbers","join","emails","onOpenModal","onClickCompany","isOpen","onRequestClose","existingCommunications","_c","$RefreshReg$"],"sources":["C:/Users/Subha/Desktop/recCal/calendar-app/frontend/src/components/User/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchCompanies } from '../../utils/api';\nimport CompanyGrid from './CompanyGrid';\nimport CommunicationModal from './CommunicationModal';\n\nconst Dashboard = () => {\n  const [companies, setCompanies] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedCompanyId, setSelectedCompanyId] = useState(null);\n  const [companyDetails, setCompanyDetails] = useState({});\n\n  useEffect(() => {\n    const getCompanies = async () => {\n      const data = await fetchCompanies();\n      setCompanies(data);\n    };\n    getCompanies();\n  }, []);\n\n  const handleOpenModal = (companyId) => {\n    setSelectedCompanyId(companyId);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedCompanyId(null);\n  };\n\n  const handleCompanyDetails = (companyId) => {\n    const company = companies.find((c) => c._id === companyId);\n    setCompanyDetails(company); // Set the selected company details (name, city, phone, email, etc.)\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <h1 className=\"text-2xl font-bold mb-4\">User Dashboard</h1>\n      <div className=\"company-details mb-4\">\n        <p>\n          <strong>Company:</strong> {companyDetails?.name}\n        </p>\n        <p>\n          <strong>City:</strong> {companyDetails?.location}\n        </p>\n        <p>\n          <strong>Phone:</strong> {companyDetails?.phoneNumbers?.join(', ')}\n        </p>\n        <p>\n          <strong>Email:</strong> {companyDetails?.emails?.join(', ')}\n        </p>\n      </div>\n      <CompanyGrid\n        companies={companies}\n        onOpenModal={handleOpenModal}\n        onClickCompany={handleCompanyDetails}\n      />\n      {isModalOpen && (\n        <CommunicationModal\n          isOpen={isModalOpen}\n          onRequestClose={handleCloseModal}\n          companyId={selectedCompanyId}\n          existingCommunications={[]}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}