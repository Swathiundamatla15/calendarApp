{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Subha\\\\Desktop\\\\recCal\\\\calendar-app\\\\frontend\\\\src\\\\components\\\\User\\\\CommunicationModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'react-modal';\nimport { logCommunication } from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommunicationModal = ({\n  isOpen,\n  onRequestClose,\n  companyId,\n  existingCommunications\n}) => {\n  _s();\n  const [communicationType, setCommunicationType] = useState('');\n  const [date, setDate] = useState('');\n  const [notes, setNotes] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const communicationData = {\n      companyId,\n      type: communicationType,\n      date,\n      notes\n    };\n    await logCommunication(communicationData);\n    onRequestClose(); // Close the modal after logging communication\n  };\n  useEffect(() => {\n    if (existingCommunications) {\n      // Reset form if there are existing communications\n      setCommunicationType('');\n      setDate('');\n      setNotes('');\n    }\n  }, [existingCommunications, isOpen]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: onRequestClose,\n    ariaHideApp: false,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Log Communication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"communicationType\",\n          children: \"Communication Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"communicationType\",\n          value: communicationType,\n          onChange: e => setCommunicationType(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"LinkedIn Post\",\n            children: \"LinkedIn Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"LinkedIn Message\",\n            children: \"LinkedIn Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Phone Call\",\n            children: \"Phone Call\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Other\",\n            children: \"Other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"notes\",\n          children: \"Notes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"notes\",\n          value: notes,\n          onChange: e => setNotes(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log Communication\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onRequestClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CommunicationModal, \"27tgBnz3sORJmhZXY9/Mv+Ab3uA=\");\n_c = CommunicationModal;\nCommunicationModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onRequestClose: PropTypes.func.isRequired,\n  companyId: PropTypes.string.isRequired,\n  existingCommunications: PropTypes.array\n};\nexport default CommunicationModal;\nvar _c;\n$RefreshReg$(_c, \"CommunicationModal\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","Modal","logCommunication","jsxDEV","_jsxDEV","CommunicationModal","isOpen","onRequestClose","companyId","existingCommunications","_s","communicationType","setCommunicationType","date","setDate","notes","setNotes","handleSubmit","e","preventDefault","communicationData","type","ariaHideApp","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","target","required","onClick","_c","propTypes","bool","isRequired","func","string","array","$RefreshReg$"],"sources":["C:/Users/Subha/Desktop/recCal/calendar-app/frontend/src/components/User/CommunicationModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'react-modal';\nimport { logCommunication } from '../../utils/api';\n\nconst CommunicationModal = ({\n  isOpen,\n  onRequestClose,\n  companyId,\n  existingCommunications,\n}) => {\n  const [communicationType, setCommunicationType] = useState('');\n  const [date, setDate] = useState('');\n  const [notes, setNotes] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const communicationData = {\n      companyId,\n      type: communicationType,\n      date,\n      notes,\n    };\n    await logCommunication(communicationData);\n    onRequestClose(); // Close the modal after logging communication\n  };\n\n  useEffect(() => {\n    if (existingCommunications) {\n      // Reset form if there are existing communications\n      setCommunicationType('');\n      setDate('');\n      setNotes('');\n    }\n  }, [existingCommunications, isOpen]);\n\n  return (\n    <Modal isOpen={isOpen} onRequestClose={onRequestClose} ariaHideApp={false}>\n      <h2>Log Communication</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"communicationType\">Communication Type:</label>\n          <select\n            id=\"communicationType\"\n            value={communicationType}\n            onChange={(e) => setCommunicationType(e.target.value)}\n            required\n          >\n            <option value=\"\">Select...</option>\n            <option value=\"LinkedIn Post\">LinkedIn Post</option>\n            <option value=\"LinkedIn Message\">LinkedIn Message</option>\n            <option value=\"Email\">Email</option>\n            <option value=\"Phone Call\">Phone Call</option>\n            <option value=\"Other\">Other</option>\n          </select>\n        </div>\n        <div>\n          <label htmlFor=\"date\">Date:</label>\n          <input\n            type=\"date\"\n            id=\"date\"\n            value={date}\n            onChange={(e) => setDate(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"notes\">Notes:</label>\n          <textarea\n            id=\"notes\"\n            value={notes}\n            onChange={(e) => setNotes(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\">Log Communication</button>\n        <button type=\"button\" onClick={onRequestClose}>\n          Cancel\n        </button>\n      </form>\n    </Modal>\n  );\n};\n\nCommunicationModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onRequestClose: PropTypes.func.isRequired,\n  companyId: PropTypes.string.isRequired,\n  existingCommunications: PropTypes.array,\n};\n\nexport default CommunicationModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}